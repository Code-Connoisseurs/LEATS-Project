@model LEATS_Project.Models.Student
<br />

<h2>Edit profile</h2>

@using (Html.BeginForm("Edit", "Students", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Student</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.StudentID)

        <div class="form-group",@style ="display:none">

            
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Id, new List<SelectListItem>
           {
               new SelectListItem {Text = Session["ActiveUser"].ToString(), Selected = true },
           }, htmlAttributes: new { @class = "form-control",@style ="display:none" })
                @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName)
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName)
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender)
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Gender, new List<SelectListItem>
           {
               new SelectListItem {Text = "select", Value = "", Selected = true },
               new SelectListItem {Text = "Male", Value = "Male" },
               new SelectListItem {Text = "Female", Value = "Female" }
           }, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Ethnicity)
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Ethnicity, new List<SelectListItem>
           {
               new SelectListItem {Text = "select", Value = "", Selected = true },
               new SelectListItem {Text = "African", Value = "African" },
               new SelectListItem {Text = "Indian", Value = "Indian" },
               new SelectListItem {Text = "White", Value = "White" },
               new SelectListItem {Text = "Coloured", Value = "Coloured" }
           },htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Ethnicity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateOfBirth)
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CellphoneNo)
            <div class="col-md-10">
                @Html.EditorFor(model => model.CellphoneNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CellphoneNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email)
            <div class="col-md-10">
          @Html.DropDownListFor(model => model.Email, new List<SelectListItem>
           {
               new SelectListItem {Text = Session["ActiveUserEmail"].ToString(), Value = Session["ActiveUserEmail"].ToString(), Selected = true },
           }, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LevelOfStudy)
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.LevelOfStudy, new List<SelectListItem>
           {
               new SelectListItem {Text = "select", Value = "", Selected = true },
               new SelectListItem {Text = "First Year", Value = "First Year" },
               new SelectListItem {Text = "Second Year", Value = "Second Year" },
               new SelectListItem {Text = "Third Year", Value = "Third Year" },
               new SelectListItem {Text = "Honours", Value = "Honours" },
               new SelectListItem {Text = "Master", Value = "Master" },
               new SelectListItem {Text = "PhD", Value = "PhD" },
           }, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LevelOfStudy, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Campus)
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Campus, new List<SelectListItem>
           {
               new SelectListItem {Text = "select", Value = "", Selected = true },
               new SelectListItem {Text = "Howard", Value = "Howard" },
               new SelectListItem {Text = "Westville", Value = "Westville" },
               new SelectListItem {Text = "Pietermaritzburg", Value = "Pietermaritzburg" },
               new SelectListItem {Text = "Medical School", Value = "Medical School" },
               new SelectListItem {Text = "Edgewood", Value = "Edgewood" },
           }, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Campus, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.College)
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.College, new List<SelectListItem>
           {
               new SelectListItem {Text = "select", Value = "", Selected = true },
               new SelectListItem {Text = "Humanities", Value = "Humanities" },
               new SelectListItem {Text = "Agriculture, Engineering & Science", Value = "Agriculture, Engineering & Science" },
               new SelectListItem {Text = "Health Sciences", Value = "Health Sciences" },
               new SelectListItem {Text = "Law and Management Studies", Value = "Law and Management Studies" },
           }, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.College, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StreetName)
            <div class="col-md-10">
                @Html.EditorFor(model => model.StreetName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StreetName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Suburb)
            <div class="col-md-10">
                @Html.EditorFor(model => model.Suburb, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Suburb, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.City)
            <div class="col-md-10">
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Province)
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Province, new List<SelectListItem>
           {
               new SelectListItem {Text = "select", Value = "", Selected = true },
               new SelectListItem {Text = "Eastern Cape", Value = "Eastern Cape" },
               new SelectListItem {Text = "Free State", Value = "Free State" },
               new SelectListItem {Text = "Gauteng", Value = "Gauteng" },
               new SelectListItem {Text = "KwaZulu-Natal", Value = "KwaZulu-Natal" },
               new SelectListItem {Text = "Limpopo", Value = "Limpopo" },
               new SelectListItem {Text = "Mpumalanga", Value = "Mpumalanga" },
               new SelectListItem {Text = "North West", Value = "North West" },
               new SelectListItem {Text = "Northern Cape", Value = "Northern Cape" },
               new SelectListItem {Text = "Western Cape", Value = "Western Cape" },
           },htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Province, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PostalCode)
            <div class="col-md-10">
                @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProfilePicture)
            <div class="col-md-10">
                <input type="file" id="image1" name="image1" />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("BACK", "Index")
</div>
