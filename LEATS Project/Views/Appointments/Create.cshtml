@model LEATS_Project.Models.Appointment

@{
    ViewBag.Title = "Create";
}
<br />
<br />
<h2>Appointment Booking</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4></h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.StudentD, "StudentD", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.StudentD, new List<SelectListItem>
           {
               new SelectListItem {Text = Session["ActiveStudentID"].ToString(), Value = Session["ActiveStudentID"].ToString(), Selected = true },
           }, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StudentD, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TutorID, "TutorID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                
                @Html.DropDownListFor(model => model.TutorID, new List<SelectListItem>
           {
               new SelectListItem {Text = Session["tutID"].ToString(), Value = Session["tutID"].ToString(), Selected = true },
           }, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StudentD, "", new { @class = "text-danger" })
                @Html.ValidationMessageFor(model => model.TutorID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RequestTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RequestTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RequestTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AppointmentTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AppointmentTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AppointmentTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AppointmentDuration, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AppointmentDuration, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AppointmentDuration, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AppointmentType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.AppointmentType, new List<SelectListItem>
           {
               new SelectListItem {Text = "select", Value = "", Selected = true },
               new SelectListItem {Text = "Face-to-face", Value = "Face-to-face" },
               new SelectListItem {Text = "Virtual(Zoom/Microsoft meeting)", Value = "Virtual(Zoom/Microsoft meeting)" }
           }, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AppointmentType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AppointmentStatus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.AppointmentType, new List<SelectListItem>
           {
               new SelectListItem {Text = "Pending", Value = "", Selected = true },
           }, htmlAttributes: new {@class = "form-control" })
                @Html.ValidationMessageFor(model => model.AppointmentStatus, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AppointmentDetails, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.AppointmentDetails, new List<SelectListItem>
           {
               new SelectListItem {Text = Session["appointmentsDetails"].ToString(), Value = Session["appointmentsDetails"].ToString(), Selected = true },
           }, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                @Html.ValidationMessageFor(model => model.AppointmentDetails, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("CANCEL", "Index", "Specialisations")

</div>
