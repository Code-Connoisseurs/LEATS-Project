@model LEATS_Project.Models.TutorApplication
<br />

@using (Html.BeginForm("Create", "TutorApplications", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>TutorApplication</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group",@style = "display:none">
           
            <div class="col-md-10",@style = "display:none">
                @Html.DropDownListFor(model => model.StudentID, new List<SelectListItem>
           {
               new SelectListItem {Text = Session["ActiveStudentID"].ToString(), Value = Session["ActiveStudentID"].ToString(), Selected = true },
           }, htmlAttributes: new { @class = "form-control", @style = "display:none" })
                @Html.ValidationMessageFor(model => model.StudentID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ModuleCode)
            <div class="col-md-10">
                @Html.EditorFor(model => model.ModuleCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ModuleCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ModuleName)
            <div class="col-md-10">
                @Html.EditorFor(model => model.ModuleName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ModuleName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AcademicTranscript)
            <div class="col-md-10">
                <input type="file" id="acad" name="acad" required accept="application/pdf"/>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProofOfRegistration)
            <div class="col-md-10">
                <input type="file" id="proof" name="proof" required accept="application/pdf"/>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ApplicationDate)
            <div class="col-md-10">
                @Html.EditorFor(model => model.ApplicationDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ApplicationDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ApplicationStatus)
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ApplicationStatus, new List<SelectListItem>
           {
               new SelectListItem {Text = "Pending", Value = "Pending", Selected = true },
           }, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ApplicationStatus, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("BACK", "InsideIndex","Home")
</div>
